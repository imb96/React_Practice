{"ast":null,"code":"var _jsxFileName = \"/Users/gimminjae/reactpractice/src/components/Average.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getAverage = numbers => {\n  console.log(\"평균값 계산 중...\");\n  if (numbers.length === 0) return 0;\n  const sum = numbers.reduce((a, b) => a + b);\n  return sum / numbers.length;\n};\n\nconst Average = () => {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [number, setNumber] = useState(\"\");\n  const onChange = useCallback(e => {\n    setNumber(e.target.value);\n  }, []); // 컴포넌트가 처음 렌더링될 때만 함수 생성\n\n  const onInsert = useCallback(e => {\n    const nextList = list.concat(parseInt(number));\n    setList(nextList);\n    setNumber(\"\");\n  }, [number, list]); // number 혹은 list가 바뀌었을 때만 함수 생성\n\n  const avg = useMemo(() => getAverage(list), [list]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: number,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onInsert,\n      children: \"\\uB4F1\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"\\uD3C9\\uADE0\\uAC12: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), \" \", avg]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Average, \"FrRJAnkhzqSm3ILMkuEoaBlUDVw=\");\n\n_c = Average;\nexport default Average;\n\nvar _c;\n\n$RefreshReg$(_c, \"Average\");","map":{"version":3,"names":["React","useState","useMemo","useCallback","getAverage","numbers","console","log","length","sum","reduce","a","b","Average","list","setList","number","setNumber","onChange","e","target","value","onInsert","nextList","concat","parseInt","avg","map","index"],"sources":["/Users/gimminjae/reactpractice/src/components/Average.js"],"sourcesContent":["import React, { useState, useMemo, useCallback } from \"react\";\n\nconst getAverage = (numbers) => {\n  console.log(\"평균값 계산 중...\");\n  if (numbers.length === 0) return 0;\n  const sum = numbers.reduce((a, b) => a + b);\n  return sum / numbers.length;\n};\n\nconst Average = () => {\n  const [list, setList] = useState([]);\n  const [number, setNumber] = useState(\"\");\n\n  const onChange = useCallback((e) => {\n    setNumber(e.target.value);\n  }, []); // 컴포넌트가 처음 렌더링될 때만 함수 생성\n\n  const onInsert = useCallback(\n    (e) => {\n      const nextList = list.concat(parseInt(number));\n      setList(nextList);\n      setNumber(\"\");\n    },\n    [number, list]\n  ); // number 혹은 list가 바뀌었을 때만 함수 생성\n\n  const avg = useMemo(() => getAverage(list), [list]);\n\n  return (\n    <div>\n      <input value={number} onChange={onChange} />\n      <button onClick={onInsert}>등록</button>\n      <ul>\n        {list.map((value, index) => (\n          <li key={index}>{value}</li>\n        ))}\n      </ul>\n      <div>\n        <b>평균값: </b> {avg}\n      </div>\n    </div>\n  );\n};\nexport default Average;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;;;AAEA,MAAMC,UAAU,GAAIC,OAAD,IAAa;EAC9BC,OAAO,CAACC,GAAR,CAAY,aAAZ;EACA,IAAIF,OAAO,CAACG,MAAR,KAAmB,CAAvB,EAA0B,OAAO,CAAP;EAC1B,MAAMC,GAAG,GAAGJ,OAAO,CAACK,MAAR,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA7B,CAAZ;EACA,OAAOH,GAAG,GAAGJ,OAAO,CAACG,MAArB;AACD,CALD;;AAOA,MAAMK,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;EAEA,MAAMiB,QAAQ,GAAGf,WAAW,CAAEgB,CAAD,IAAO;IAClCF,SAAS,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;EACD,CAF2B,EAEzB,EAFyB,CAA5B,CAJoB,CAMZ;;EAER,MAAMC,QAAQ,GAAGnB,WAAW,CACzBgB,CAAD,IAAO;IACL,MAAMI,QAAQ,GAAGT,IAAI,CAACU,MAAL,CAAYC,QAAQ,CAACT,MAAD,CAApB,CAAjB;IACAD,OAAO,CAACQ,QAAD,CAAP;IACAN,SAAS,CAAC,EAAD,CAAT;EACD,CALyB,EAM1B,CAACD,MAAD,EAASF,IAAT,CAN0B,CAA5B,CARoB,CAejB;;EAEH,MAAMY,GAAG,GAAGxB,OAAO,CAAC,MAAME,UAAU,CAACU,IAAD,CAAjB,EAAyB,CAACA,IAAD,CAAzB,CAAnB;EAEA,oBACE;IAAA,wBACE;MAAO,KAAK,EAAEE,MAAd;MAAsB,QAAQ,EAAEE;IAAhC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAEI,QAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,UACGR,IAAI,CAACa,GAAL,CAAS,CAACN,KAAD,EAAQO,KAAR,kBACR;QAAA,UAAiBP;MAAjB,GAASO,KAAT;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAHF,eAQE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,OACgBF,GADhB;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CAjCD;;GAAMb,O;;KAAAA,O;AAkCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}